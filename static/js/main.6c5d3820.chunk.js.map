{"version":3,"sources":["components/Table/index.js","App.js","reportWebVitals.js","index.js"],"names":["Index","useState","name","setName","price","setPrice","id","setId","store","setStore","update","targetId","prevState","map","item","resetInput","className","length","type","defaultValue","onChange","e","target","value","onClick","filter","placeholder","items","App","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c5d3820.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport '../../App.css'\r\nimport './table.css'\r\n\r\nconst Index = () => {\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [id, setId] = useState('')\r\n\r\n    const [store, setStore] = useState([\r\n        { id: 1 , name: 'Товар 1', price: 1000},\r\n        { id: 2 , name: 'Товар 2', price: 2000},\r\n        { id: 3 , name: 'Товар 3', price: 3000},\r\n        { id: 4 , name: 'Товар 4', price: 4000},\r\n        { id: 5 , name: 'Товар 5', price: 5000},\r\n        { id: 6 , name: 'Товар 6', price: 6000},\r\n        { id: 7 , name: 'Товар 7', price: 7000},\r\n        { id: 8 , name: 'Товар 8', price: 8000},\r\n        { id: 9 , name: 'Товар 9', price: 9000},\r\n        { id: 10 , name: 'Товар 10', price: 10000}\r\n    ]);\r\n\r\n    const remove =  (targetId) => {\r\n        setStore(prevState => prevState.filter(item => item.id !== targetId));\r\n    }\r\n    const update = (targetId) =>{\r\n        setStore((prevState) => prevState.map((item) => (item.id == targetId ? {id, name, price} : item)));\r\n        resetInput()\r\n    }\r\n\r\n    const create =  (e) => {\r\n        const items = { id, name, price }\r\n        setStore([...store, items])\r\n        resetInput()\r\n\r\n    }\r\n\r\n    const resetInput = () => {\r\n        setId('')\r\n        setName('')\r\n        setPrice('')\r\n\r\n    }\r\n    const renderItem = ({id, name, price})=>(\r\n        <tr key={id}>\r\n            <td  className='products__id'>\r\n                <input\r\n                    type='text'\r\n                    defaultValue={id}\r\n                    onChange={e => setId(e.target.value)}\r\n                />\r\n            </td>\r\n            <td  className='products__id'>\r\n                <input\r\n                    type='text'\r\n                    defaultValue={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                />\r\n            </td>\r\n            <td  className='products__id'>\r\n                <input\r\n                    type='text'\r\n                    defaultValue={price}\r\n                    onChange={e => setPrice(e.target.value)}/>\r\n            </td>\r\n            <td>\r\n                <button className='products__btn products__btn-remove'\r\n                        onClick={()=> remove(id)}\r\n                >Удалить</button>\r\n\r\n                <button className='products__btn products__btn-update'\r\n                        onClick={()=> update(id, name, price)}\r\n                >Изменить</button>\r\n            </td>\r\n        </tr>\r\n\r\n    )\r\n\r\n    return (\r\n        <div className='container-flex'>\r\n            <h1>{store.length ? 'Список товаров' : 'Данных нет'}</h1>\r\n            <table className='products'>\r\n                <thead>\r\n                <tr className='products__tr'>\r\n                    <th className='products__th'>#</th>\r\n                    <th className='products__th'>Название</th>\r\n                    <th className='products__th'>Цена</th>\r\n                    <th className='products__th'>Действия</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>{store.map(renderItem)}</tbody>\r\n\r\n                <tfoot>\r\n                <tr>\r\n                    <td><input onChange={e => setId(e.target.value)}  type=\"text\" placeholder={'Id'}/></td>\r\n                    <td><input onChange={e => setName(e.target.value)} type=\"text\" placeholder={'Name'}  /></td>\r\n                    <td><input onChange={e => setPrice(e.target.value)} type=\"text\" placeholder={'Price'} /></td>\r\n                    <td>\r\n                        <button type={'button'}\r\n                                className='products__btn products__btn-add'\r\n                                onClick={create}\r\n                        >\r\n                            Добавить\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n\r\n                </tfoot>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","import React from 'react'\nimport './App.css';\nimport Table from './components/Table/index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}